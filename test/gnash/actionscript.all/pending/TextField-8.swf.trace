PASSED: typeof(TextField) == 'function' [TextField.as:28]
PASSED: typeof(TextField.prototype) == 'object' [TextField.as:29]
PASSED: typeof(TextField.prototype.__proto__) == 'object' [TextField.as:30]
PASSED: TextField.prototype.__proto__ == Object.prototype [TextField.as:31]
PASSED: typeof(TextField.prototype.setTextFormat) == 'function' [TextField.as:32]
PASSED: typeof(TextField.prototype.getTextFormat) == 'function' [TextField.as:33]
PASSED: typeof(TextField.prototype.setNewTextFormat) == 'function' [TextField.as:34]
PASSED: typeof(TextField.prototype.getNewTextFormat) == 'function' [TextField.as:35]
PASSED: typeof(TextField.prototype.getDepth) == 'function' [TextField.as:36]
PASSED: typeof(TextField.prototype.removeTextField) == 'function' [TextField.as:37]
PASSED: typeof(TextField.prototype.replaceSel) == 'function' [TextField.as:38]
PASSED: typeof(TextField.prototype.addListener) == 'function' [TextField.as:42]
PASSED: typeof(TextField.prototype.removeListener) == 'function' [TextField.as:43]
PASSED: typeof(TextField.prototype.broadcastMessage) == 'function' [TextField.as:44]
PASSED: TextField.prototype.hasOwnProperty("_listeners") [TextField.as:45]
PASSED: typeof(TextField.prototype._listeners) == 'object' [TextField.as:46]
PASSED: TextField.prototype._listeners instanceof Array [TextField.as:47]
PASSED: TextField.prototype._listeners.length == 0 [TextField.as:48]
XPASSED: !TextField.prototype.hasOwnProperty('background') [TextField.as:51]
XPASSED: !TextField.prototype.hasOwnProperty('backgroundColor') [TextField.as:52]
XPASSED: !TextField.prototype.hasOwnProperty('autoSize') [TextField.as:53]
XPASSED: !TextField.prototype.hasOwnProperty('border') [TextField.as:54]
XPASSED: !TextField.prototype.hasOwnProperty('borderColor') [TextField.as:55]
PASSED: !TextField.prototype.hasOwnProperty('bottomScroll') [TextField.as:56]
XPASSED: !TextField.prototype.hasOwnProperty('embedFonts') [TextField.as:57]
PASSED: !TextField.prototype.hasOwnProperty('hscroll') [TextField.as:58]
XPASSED: !TextField.prototype.hasOwnProperty('html') [TextField.as:59]
PASSED: !TextField.prototype.hasOwnProperty('htmlText') [TextField.as:60]
XPASSED: !TextField.prototype.hasOwnProperty('length') [TextField.as:61]
PASSED: !TextField.prototype.hasOwnProperty('maxChars') [TextField.as:62]
PASSED: !TextField.prototype.hasOwnProperty('maxhscroll') [TextField.as:63]
PASSED: !TextField.prototype.hasOwnProperty('maxscroll') [TextField.as:64]
PASSED: !TextField.prototype.hasOwnProperty('multiline') [TextField.as:65]
PASSED: !TextField.prototype.hasOwnProperty('password') [TextField.as:66]
PASSED: !TextField.prototype.hasOwnProperty('restrict') [TextField.as:67]
PASSED: !TextField.prototype.hasOwnProperty('scroll') [TextField.as:68]
XPASSED: !TextField.prototype.hasOwnProperty('selectable') [TextField.as:69]
PASSED: !TextField.prototype.hasOwnProperty('text') [TextField.as:70]
XPASSED: !TextField.prototype.hasOwnProperty('textColor') [TextField.as:71]
XPASSED: !TextField.prototype.hasOwnProperty('textHeight') [TextField.as:72]
XPASSED: !TextField.prototype.hasOwnProperty('textWidth') [TextField.as:73]
XPASSED: !TextField.prototype.hasOwnProperty('type') [TextField.as:74]
XPASSED: !TextField.prototype.hasOwnProperty('variable') [TextField.as:75]
XPASSED: !TextField.prototype.hasOwnProperty('wordWrap') [TextField.as:76]
PASSED: typeof(TextField.getFontList) == 'function' [TextField.as:79]
PASSED: typeof(TextField.prototype.getFontList) == 'undefined' [TextField.as:81]
PASSED: typeof(TextField.prototype.replaceText) == 'function' [TextField.as:84]
PASSED: typeof(tfObj) == 'object' [TextField.as:90]
PASSED: tfObj instanceof TextField [TextField.as:91]
PASSED: typeof(tfObj.setTextFormat) == 'function' [TextField.as:93]
PASSED: typeof(tfObj.getTextFormat) == 'function' [TextField.as:94]
PASSED: typeof(tfObj.setNewTextFormat) == 'function' [TextField.as:95]
PASSED: typeof(tfObj.getNewTextFormat) == 'function' [TextField.as:96]
PASSED: typeof(tfObj.addListener) == 'function' [TextField.as:97]
PASSED: typeof(tfObj.removeListener) == 'function' [TextField.as:98]
PASSED: typeof(tfObj.getDepth) == 'function' [TextField.as:99]
PASSED: typeof(tfObj.removeTextField) == 'function' [TextField.as:100]
PASSED: typeof(tfObj.replaceSel) == 'function' [TextField.as:101]
PASSED: typeof(tfObj.getFontList) == 'undefined' [TextField.as:103]
PASSED: typeof(ret) == 'object' [TextField.as:113]
PASSED: ret == _root.tf [TextField.as:114]
PASSED: typeof(tf) == 'object' [TextField.as:117]
PASSED: tf.hasOwnProperty('_listeners') [TextField.as:118]
PASSED: tf._listeners.length == 1 [TextField.as:119]
PASSED: tf._listeners[0] == tf [TextField.as:120]
PASSED: !tf.hasOwnProperty('broadcastMessage') [TextField.as:121]
PASSED: !tf.hasOwnProperty('addListener') [TextField.as:122]
PASSED: !tf.hasOwnProperty('removeListener') [TextField.as:123]
PASSED: TextField.prototype.hasOwnProperty('background') [TextField.as:126]
PASSED: TextField.prototype.hasOwnProperty('backgroundColor') [TextField.as:127]
PASSED: TextField.prototype.hasOwnProperty('autoSize') [TextField.as:128]
PASSED: TextField.prototype.hasOwnProperty('border') [TextField.as:129]
PASSED: TextField.prototype.hasOwnProperty('borderColor') [TextField.as:130]
XPASSED: TextField.prototype.hasOwnProperty('bottomScroll') [TextField.as:131]
PASSED: TextField.prototype.hasOwnProperty('embedFonts') [TextField.as:132]
XPASSED: TextField.prototype.hasOwnProperty('hscroll') [TextField.as:133]
PASSED: TextField.prototype.hasOwnProperty('html') [TextField.as:134]
XPASSED: TextField.prototype.hasOwnProperty('htmlText') [TextField.as:135]
PASSED: TextField.prototype.hasOwnProperty('length') [TextField.as:136]
XPASSED: TextField.prototype.hasOwnProperty('maxChars') [TextField.as:137]
XPASSED: TextField.prototype.hasOwnProperty('maxhscroll') [TextField.as:138]
XPASSED: TextField.prototype.hasOwnProperty('maxscroll') [TextField.as:139]
XPASSED: TextField.prototype.hasOwnProperty('multiline') [TextField.as:140]
XPASSED: TextField.prototype.hasOwnProperty('password') [TextField.as:141]
XPASSED: TextField.prototype.hasOwnProperty('restrict') [TextField.as:142]
XPASSED: TextField.prototype.hasOwnProperty('scroll') [TextField.as:143]
PASSED: TextField.prototype.hasOwnProperty('selectable') [TextField.as:144]
XPASSED: TextField.prototype.hasOwnProperty('text') [TextField.as:145]
PASSED: TextField.prototype.hasOwnProperty('textColor') [TextField.as:146]
PASSED: TextField.prototype.hasOwnProperty('textHeight') [TextField.as:147]
PASSED: TextField.prototype.hasOwnProperty('textWidth') [TextField.as:148]
PASSED: TextField.prototype.hasOwnProperty('type') [TextField.as:149]
PASSED: TextField.prototype.hasOwnProperty('variable') [TextField.as:150]
PASSED: TextField.prototype.hasOwnProperty('wordWrap') [TextField.as:151]
PASSED: TextField.prototype.hasOwnProperty('length') [TextField.as:152]
PASSED: ! TextField.prototype.hasOwnProperty('valueOf') [TextField.as:154]
PASSED: ! TextField.prototype.hasOwnProperty('toString') [TextField.as:155]
PASSED: TextField.prototype.__proto__.hasOwnProperty('valueOf') [TextField.as:156]
PASSED: TextField.prototype.__proto__.hasOwnProperty('toString') [TextField.as:157]
PASSED: typeof(tf._alpha) == 'number' [TextField.as:161]
PASSED: ! tf.hasOwnProperty('_alpha') [TextField.as:162]
PASSED: ! tf.__proto__.hasOwnProperty('_alpha') [TextField.as:163]
PASSED: typeof(tf.autoSize) == 'string' [TextField.as:167]
PASSED: tf.autoSize == 'none' [TextField.as:168]
PASSED: ! tf.hasOwnProperty('autoSize') [TextField.as:169]
PASSED: tf.autoSize == 'none' [TextField.as:171]
PASSED: tf.autoSize == 'left' [TextField.as:173]
PASSED: tf.autoSize == 'none' [TextField.as:175]
PASSED: tf.autoSize == 'center' [TextField.as:177]
PASSED: tf.autoSize == 'right' [TextField.as:179]
PASSED: tf.autoSize == 'center' [TextField.as:182]
PASSED: tf.autoSize == 'left' [TextField.as:184]
PASSED: tf.autoSize == 'none' [TextField.as:186]
PASSED: typeof(tf.background) == 'boolean' [TextField.as:192]
PASSED: !tf.hasOwnProperty('background') [TextField.as:193]
PASSED: tf.background == false [TextField.as:194]
PASSED: tf.background == true [TextField.as:196]
PASSED: tf.background == false [TextField.as:198]
PASSED: typeof(tf.background) == 'boolean' [TextField.as:199]
PASSED: typeof(tf.background) == 'boolean' [TextField.as:201]
PASSED: tf.background == true [TextField.as:202]
PASSED: tf.background == true [TextField.as:205]
PASSED: typeof(tf.background) == 'boolean' [TextField.as:208]
PASSED: tf.background == true [TextField.as:209]
PASSED: typeof(tf.background) == 'boolean' [TextField.as:211]
PASSED: tf.background == true [TextField.as:212]
PASSED: typeof(tf.backgroundColor) == 'number' [TextField.as:217]
PASSED: !tf.hasOwnProperty('backgroundColor') [TextField.as:218]
PASSED: tf.backgroundColor == 0x00FF00 [TextField.as:220]
PASSED: tf.backgroundColor == 0x000000 [TextField.as:222]
PASSED: tf.backgroundColor == 0x0000FF [TextField.as:225]
PASSED: typeof(tf.border) == 'boolean' [TextField.as:229]
PASSED: !tf.hasOwnProperty('border') [TextField.as:230]
PASSED: typeof(tf.borderColor) == 'number' [TextField.as:234]
PASSED: !tf.hasOwnProperty('borderColor') [TextField.as:235]
XPASSED: typeof(tf.bottomScroll) == 'number' [TextField.as:239]
PASSED: !tf.hasOwnProperty('bottomScroll') [TextField.as:240]
XPASSED: tf.bottomScroll == 1 [TextField.as:241]
XPASSED: tf.bottomScroll == 1 [TextField.as:243]
PASSED: typeof(tf.embedFonts) == 'boolean' [TextField.as:247]
PASSED: !tf.hasOwnProperty('embedFonts') [TextField.as:248]
PASSED: tf.embedFonts == false [TextField.as:249]
PASSED: tf.embedFonts == true [TextField.as:251]
PASSED: typeof(tf.embedFonts) == 'boolean' [TextField.as:253]
PASSED: tf.embedFonts == true [TextField.as:254]
PASSED: typeof(tf.embedFonts) == 'boolean' [TextField.as:256]
PASSED: tf.embedFonts == false [TextField.as:257]
XPASSED: typeof(tf._highquality) == 'number' [TextField.as:262]
PASSED: !tf.hasOwnProperty('_highquality') [TextField.as:263]
PASSED: !tf.__proto__.hasOwnProperty('_highquality') [TextField.as:264]
XPASSED: tf._highquality == 1 [TextField.as:265]
PASSED: tf._highquality == 0 [TextField.as:267]
PASSED: typeof(tf._height) == 'number' [TextField.as:272]
PASSED: !tf.hasOwnProperty('_height') [TextField.as:273]
PASSED: !tf.__proto__.hasOwnProperty('_height') [TextField.as:274]
PASSED: tf._height == 500 [TextField.as:275]
PASSED: tf._height == 99999 [TextField.as:277]
XPASSED: typeof(tf.hscroll) == 'number' [TextField.as:282]
PASSED: !tf.hasOwnProperty('hscroll') [TextField.as:283]
XPASSED: tf.hscroll == 0 [TextField.as:284]
XPASSED: tf.hscroll == 0 [TextField.as:286]
PASSED: typeof(tf.html) == 'boolean' [TextField.as:291]
PASSED: !tf.hasOwnProperty('html') [TextField.as:292]
PASSED: tf.html == false [TextField.as:293]
PASSED: tf.html == true [TextField.as:295]
PASSED: typeof(tf.htmlText) == 'string' [TextField.as:300]
PASSED: !tf.hasOwnProperty('htmlText') [TextField.as:301]
PASSED: tf.htmlText == '' [TextField.as:302]
PASSED: typeof(tf.htmlText) == 'string' [TextField.as:304]
PASSED: tf.htmlText == '' [TextField.as:305]
PASSED: tf.html == false [TextField.as:306]
PASSED: tf.html == false [TextField.as:308]
PASSED: tf.htmlText == 'Hello <b>html</b> world' [TextField.as:309]
PASSED: tf.text == 'Hello <b>html</b> world' [TextField.as:311]
PASSED: tf.htmlText == 'Hello world' [TextField.as:313]
PASSED: typeof(tf.length) == 'number' [TextField.as:319]
PASSED: !tf.hasOwnProperty('length') [TextField.as:320]
PASSED: tf.length == 0 [TextField.as:322]
PASSED: tf.length == 0 [TextField.as:324]
PASSED: tf.length == 11 [TextField.as:326]
PASSED: tf.length == 18 [TextField.as:328]
XPASSED: typeof(tf.maxChars) == 'null' [TextField.as:332]
PASSED: !tf.hasOwnProperty('maxChars') [TextField.as:333]
PASSED: tf.maxChars == 5 [TextField.as:335]
PASSED: tf.text == "0123456789" [TextField.as:338]
XPASSED: typeof(tf.maxhscroll) == 'number' [TextField.as:343]
PASSED: !tf.hasOwnProperty('maxhscroll') [TextField.as:344]
XPASSED: tf.maxhscroll == 0 [TextField.as:345]
XPASSED: tf.maxhscroll == 0 [TextField.as:347]
XPASSED: typeof(tf.maxscroll) == 'number' [TextField.as:351]
PASSED: !tf.hasOwnProperty('maxscroll') [TextField.as:352]
XPASSED: tf.maxscroll == 1 [TextField.as:353]
XPASSED: tf.maxscroll == 1 [TextField.as:355]
XPASSED: typeof(tf.multiline) == 'boolean' [TextField.as:359]
PASSED: !tf.hasOwnProperty('multiline') [TextField.as:360]
XPASSED: tf.multiline == false [TextField.as:361]
PASSED: tf.multiline == true [TextField.as:363]
PASSED: typeof(tf._name) == 'string' [TextField.as:370]
PASSED: !tf.hasOwnProperty('_name') [TextField.as:371]
XPASSED: !tf.__proto__.hasOwnProperty('_name') [TextField.as:372]
PASSED: tf._name == 'tf' [TextField.as:373]
PASSED: typeof(tf) == 'undefined' [TextField.as:376]
PASSED: typeof(tfref) == 'object' [TextField.as:377]
PASSED: tfref._name == 'changed' [TextField.as:378]
PASSED: tfref._target == '/changed' [TextField.as:379]
PASSED: typeof(tf) == 'object' [TextField.as:381]
PASSED: typeof(tfref) == 'object' [TextField.as:382]
PASSED: typeof(tf._parent) == 'movieclip' [TextField.as:389]
PASSED: !tf.hasOwnProperty('_parent') [TextField.as:390]
XPASSED: !tf.__proto__.hasOwnProperty('_parent') [TextField.as:391]
PASSED: tf._parent == _root [TextField.as:392]
XPASSED: tf._parent == 23 [TextField.as:395]
PASSED: tf._target == "/tf" [TextField.as:396]
XPASSED: r [TextField.as:398]
PASSED: !r [TextField.as:400]
PASSED: tf._parent == _root [TextField.as:402]
XPASSED: typeof(tf.password) == 'boolean' [TextField.as:410]
PASSED: !tf.hasOwnProperty('password') [TextField.as:411]
XPASSED: tf.password == false [TextField.as:412]
PASSED: tf.password == true [TextField.as:414]
XPASSED: typeof(tf._quality) == 'string' [TextField.as:421]
PASSED: !tf.hasOwnProperty('quality') [TextField.as:422]
PASSED: !tf.__proto__.hasOwnProperty('quality') [TextField.as:423]
PASSED: !tf.__proto__.__proto__.hasOwnProperty('quality') [TextField.as:424]
PASSED: !tf.__proto__.__proto__.__proto__.hasOwnProperty('quality') [TextField.as:425]
XPASSED: tf._quality == "HIGH" [TextField.as:426]
XPASSED: tf._quality == "HIGH" [TextField.as:428]
PASSED: tf._quality == "LOW" [TextField.as:430]
XPASSED: typeof(tf.restrict) == 'null' [TextField.as:435]
PASSED: !tf.hasOwnProperty('restrict') [TextField.as:436]
PASSED: tf.text == "Hello World" [TextField.as:439]
PASSED: tf.text == "Hello World" [TextField.as:443]
XPASSED: typeof(tf._rotation) == 'number' [TextField.as:448]
PASSED: !tf.hasOwnProperty('_rotation') [TextField.as:449]
PASSED: !tf.__proto__.hasOwnProperty('_rotation') [TextField.as:450]
XPASSED: tf._rotation == 0 [TextField.as:451]
PASSED: tf._rotation == 10 [TextField.as:453]
XPASSED: typeof(tf.scroll) == 'number' [TextField.as:459]
PASSED: ! tf.hasOwnProperty('scroll') [TextField.as:460]
XPASSED: tf.scroll == 1 [TextField.as:461]
XPASSED: tf.scroll == 1 [TextField.as:463]
PASSED: typeof(tf.selectable) == 'boolean' [TextField.as:467]
PASSED: ! tf.hasOwnProperty('selectable') [TextField.as:468]
PASSED: tf.selectable == true [TextField.as:469]
PASSED: tf.selectable == false [TextField.as:471]
PASSED: typeof(tf.selectable) == 'boolean' [TextField.as:473]
XPASSED: typeof(tf._soundbuftime) == 'number' [TextField.as:478]
PASSED: ! tf.hasOwnProperty('_soundbuftime') [TextField.as:479]
PASSED: ! tf.__proto__.hasOwnProperty('_soundbuftime') [TextField.as:480]
XPASSED: tf._soundbuftime == 5 [TextField.as:481]
PASSED: typeof(tf.tabEnabled) == 'undefined' [TextField.as:485]
PASSED: ! tf.hasOwnProperty('tabEnabled') [TextField.as:486]
PASSED: ! tf.__proto__.hasOwnProperty('tabEnabled') [TextField.as:487]
PASSED: tf.tabEnabled == false [TextField.as:489]
PASSED: typeof(tf.tabIndex) == 'undefined' [TextField.as:494]
PASSED: ! tf.hasOwnProperty('tabIndex') [TextField.as:495]
PASSED: ! tf.__proto__hasOwnProperty('tabIndex') [TextField.as:496]
PASSED: tf.tabIndex == 9 [TextField.as:498]
PASSED: typeof(tf._target) == 'string' [TextField.as:505]
PASSED: ! tf.hasOwnProperty('_target') [TextField.as:506]
XPASSED: ! tf.__proto__.hasOwnProperty('_target') [TextField.as:507]
PASSED: tf._target == '/tf' [TextField.as:508]
PASSED: tf._target == '/tf' [TextField.as:511]
PASSED: typeof(tf.text) == 'string' [TextField.as:515]
PASSED: ! tf.hasOwnProperty('text') [TextField.as:516]
PASSED: tf.text == 'Hello World' [TextField.as:517]
PASSED: tf.text == 'hello world' [TextField.as:519]
PASSED: tf.length == 11 [TextField.as:520]
PASSED: typeof(tf.textColor) == 'number' [TextField.as:525]
PASSED: ! tf.hasOwnProperty('textColor') [TextField.as:526]
PASSED: tf.textColor == 0 [TextField.as:527]
PASSED: tf.textColor == 0xFF0000 [TextField.as:529]
PASSED: typeof(tf.textHeight) == 'number' [TextField.as:534]
PASSED: ! tf.hasOwnProperty('textHeight') [TextField.as:535]
PASSED: tf.textHeight == currentHeight [TextField.as:538]
PASSED: typeof(tf.textWidth) == 'number' [TextField.as:542]
PASSED: ! tf.hasOwnProperty('textWidth') [TextField.as:543]
PASSED: tf.textWidth == currentWidth [TextField.as:546]
PASSED: typeof(tf.type) == 'string' [TextField.as:550]
PASSED: ! tf.hasOwnProperty('type') [TextField.as:551]
PASSED: tf.type == 'dynamic' [TextField.as:552]
PASSED: tf.type == 'input' [TextField.as:554]
PASSED: typeof(tf.type) == 'string' [TextField.as:556]
PASSED: tf.type == 'input' [TextField.as:557]
PASSED: tf.type == 'dynamic' [TextField.as:559]
PASSED: tf.type == 'dynamic' [TextField.as:561]
PASSED: tf.type == 'input' [TextField.as:564]
XPASSED: typeof(tf._url) == 'string' [TextField.as:568]
PASSED: ! tf.hasOwnProperty('_url') [TextField.as:569]
PASSED: ! tf.__proto__.hasOwnProperty('_url') [TextField.as:570]
XPASSED: tf._url == _root._url [TextField.as:571]
XPASSED: tf._url == _root._url [TextField.as:573]
XPASSED: typeof(tf.variable) == 'null' [TextField.as:583]
PASSED: ! tf.hasOwnProperty('variable') [TextField.as:584]
XPASSED: typeof(tf.variable) == 'null' [TextField.as:586]
PASSED: typeof(tf.variable) == 'string' [TextField.as:588]
PASSED: tf.variable == '2' [TextField.as:589]
XPASSED: typeof(tf.variable) == 'null' [TextField.as:591]
XPASSED: typeof(tf.variable) == 'null' [TextField.as:594]
PASSED: tf.variable == '_level0.inputVar' [TextField.as:596]
XPASSED: typeof(_level0.inputVar) == 'undefined' [TextField.as:597]
XPASSED: tf.text == "hello world" [TextField.as:598]
XPASSED: !_level0.hasOwnProperty('inputVar') [TextField.as:599]
PASSED: tf.text == "dynamic variable" [TextField.as:601]
PASSED: _level0.inputVar == "back-propagated" [TextField.as:603]
XPASSED: tf.text == "back-propagated" [TextField.as:606]
XPASSED: tf.text == "back-propagated" [TextField.as:608]
PASSED: o.t == "back-to-object" [TextField.as:610]
PASSED: tf.text == "back-to-object" [TextField.as:612]
XPASSED: tf.text == "from object again" [TextField.as:614]
PASSED: o.t == "from object again" [TextField.as:615]
XPASSED: tf.text == "from object again" [TextField.as:617]
PASSED: o.t == "and forever back" [TextField.as:619]
PASSED: typeof(hardref) == 'object' [TextField.as:640]
PASSED: typeof(softref) == 'object' [TextField.as:641]
PASSED: softref.prop == 5 [TextField.as:642]
PASSED: softref.getDepth() == 23 [TextField.as:643]
PASSED: typeof(hardref) == 'undefined' [TextField.as:645]
PASSED: typeof(softref) == 'movieclip' [TextField.as:646]
PASSED: typeof(softref.prop) == 'undefined' [TextField.as:647]
PASSED: typeof(hardref) == 'movieclip' [TextField.as:649]
PASSED: typeof(softref) == 'movieclip' [TextField.as:651]
PASSED: softref.prop == 7 [TextField.as:652]
PASSED: typeof(softref) == 'object' [TextField.as:656]
PASSED: softref.prop == 9 [TextField.as:657]
PASSED: typeof(tf._visible) == 'boolean' [TextField.as:664]
PASSED: ! tf.hasOwnProperty('_visible') [TextField.as:665]
PASSED: ! tf.__proto__.hasOwnProperty('_visible') [TextField.as:666]
PASSED: tf._visible == true [TextField.as:667]
PASSED: tf._visible == false [TextField.as:669]
PASSED: typeof(tf._width) == 'number' [TextField.as:676]
PASSED: ! tf.hasOwnProperty('_width') [TextField.as:677]
PASSED: ! tf.__proto__.hasOwnProperty('_width') [TextField.as:678]
PASSED: tf._width == 500 [TextField.as:679]
PASSED: tf._width == 99999 [TextField.as:681]
PASSED: typeof(tf.wordWrap) == 'boolean' [TextField.as:688]
PASSED: ! tf.hasOwnProperty('wordWrap') [TextField.as:689]
PASSED: tf.wordWrap == false [TextField.as:690]
PASSED: typeof(tf._x) == 'number' [TextField.as:697]
PASSED: ! tf.hasOwnProperty('_x') [TextField.as:698]
PASSED: ! tf.__proto__.hasOwnProperty('_x') [TextField.as:699]
PASSED: tf._x == 10 [TextField.as:700]
PASSED: tf._x == 20 [TextField.as:702]
PASSED: typeof(tf._xmouse) == 'number' [TextField.as:708]
PASSED: ! tf.hasOwnProperty('_xmouse') [TextField.as:709]
XPASSED: ! tf.__proto__.hasOwnProperty('_xmouse') [TextField.as:710]
PASSED: typeof(tf._xmouse) == 'number' [TextField.as:713]
PASSED: tf._xmouse == currXmouse [TextField.as:714]
PASSED: typeof(tf._xscale) == 'number' [TextField.as:720]
PASSED: ! tf.hasOwnProperty('_xscale') [TextField.as:721]
XPASSED: ! tf.__proto__.hasOwnProperty('_xscale') [TextField.as:722]
PASSED: tf._xscale == 100 [TextField.as:723]
NOTE: textWidth: _xscale=100: 79; _xscale=200: 39
XPASSED: tf._width == currWidth*2 [TextField.as:730]
PASSED: typeof(tf._y) == 'number' [TextField.as:737]
PASSED: ! tf.hasOwnProperty('_y') [TextField.as:738]
PASSED: ! tf.__proto__.hasOwnProperty('_y') [TextField.as:739]
PASSED: tf._y == 10 [TextField.as:740]
PASSED: tf._y == 5 [TextField.as:742]
PASSED: typeof(tf._ymouse) == 'number' [TextField.as:748]
PASSED: ! tf.hasOwnProperty('_ymouse') [TextField.as:749]
XPASSED: ! tf.__proto__.hasOwnProperty('_ymouse') [TextField.as:750]
PASSED: typeof(tf._ymouse) == 'number' [TextField.as:753]
PASSED: tf._ymouse == currYmouse [TextField.as:754]
PASSED: typeof(tf._yscale) == 'number' [TextField.as:760]
PASSED: ! tf.hasOwnProperty('_yscale') [TextField.as:761]
XPASSED: ! tf.__proto__.hasOwnProperty('_yscale') [TextField.as:762]
PASSED: tf._yscale == 100 [TextField.as:763]
NOTE: textHeight: _yscale=100: 15; _yscale=200: 13
XPASSED: tf._height == currHeight*2 [TextField.as:770]
PASSED: tf._width == 10 [TextField.as:781]
PASSED: tf._width > 10 [TextField.as:784]
PASSED: tf.textWidth == origTextWidth [TextField.as:785]
NOTE: After setting wordWrap flat: textWidth: 57 origTextWidth:57
PASSED: tf.textWidth == origTextWidth [TextField.as:789]
NOTE: After reducing _width: textWidth: 9 origTextWidth:57
PASSED: tf._width == 10 [TextField.as:792]
XPASSED: origTextWidth > tf.textWidth [TextField.as:797]
PASSED: tf._width == linewidth [TextField.as:806]
PASSED: typeof(tf2) == 'object' [TextField.as:814]
PASSED: tf2._width == 1 [TextField.as:815]
PASSED: tf2._height == 2 [TextField.as:816]
PASSED: tf2._x == 5 [TextField.as:817]
PASSED: tf2._y == 6 [TextField.as:818]
PASSED: tf3._x == 10 [TextField.as:821]
PASSED: tf3._y == 10 [TextField.as:822]
PASSED: tf3._width == 0 [TextField.as:823]
PASSED: tf3._height == 50 [TextField.as:824]
PASSED: tf4._width == 0 [TextField.as:827]
PASSED: tf4._height == 20 [TextField.as:828]
PASSED: _root[3].getDepth() == 101 [TextField.as:831]
PASSED: _root[3]._x == 10 [TextField.as:832]
PASSED: _root[3]._y == 100 [TextField.as:833]
PASSED: _root[3]._width == 32 [TextField.as:834]
PASSED: _root[3]._height == 15 [TextField.as:835]
PASSED: tf5._name == "tf5" [TextField.as:839]
PASSED: tf5._target == "/tf5" [TextField.as:840]
PASSED: tf5.getDepth() == 102 [TextField.as:841]
PASSED: tf5._x == 10 [TextField.as:842]
PASSED: tf5._y == 130 [TextField.as:843]
PASSED: tf5._width == 3 [TextField.as:844]
PASSED: tf5._height == 2 [TextField.as:845]
PASSED: typeof(tf6) == 'undefined' [TextField.as:849]
PASSED: typeof(htf) == 'object' [TextField.as:858]
PASSED: _root._x == 0 [TextField.as:871]
PASSED: _root._y == 0 [TextField.as:872]
PASSED: _root._visible == true [TextField.as:873]
PASSED: _root._xscale == 100 [TextField.as:874]
PASSED: _root._yscale == 100 [TextField.as:875]
PASSED: _root._target == '/' [TextField.as:876]
XPASSED: _root._parent == 'fake_parent' [TextField.as:877]
PASSED: _root._name == '' [TextField.as:878]
PASSED: tf._x == 10 [TextField.as:880]
PASSED: tf._y == 11 [TextField.as:881]
PASSED: tf._visible == false [TextField.as:882]
PASSED: tf._xscale == 200 [TextField.as:883]
XPASSED: tf._yscale == 201 [TextField.as:884]
PASSED: tf._target == '/fake_name' [TextField.as:885]
PASSED: tf._parent == _level0 [TextField.as:886]
PASSED: tf._name == 'fake_name' [TextField.as:887]
check_totals: 416
